version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    ports: 
      - 5432:5432
    volumes:
      - ./backend/db/postgreSQL/data:/var/lib/postgresql/data
      - ./backend/db/postgreSQL/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U dashori"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
        POSTGRES_HOST: "postgres"
        POSTGRES_PORT: 5432
        POSTGRES_USER: "dashori"
        POSTGRES_PASSWORD: "parasha"
        POSTGRES_DB: "postgres"
        PGDATA: "/var/lib/postgresql/data/pgdata"
        TZ: "Europe/Moscow"
    networks:
      - mynetwork

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile3
    image: test-backend
    container_name: test-backend
    command: go run ./cmd/main.go
    environment:
      PASSWORD_FROM: $PASSWORD_FROM
      TC_HOST: "host.docker.internal"
      TZ: "Europe/Moscow"
    volumes:
     - ./backend:/app
     - /var/run/docker.sock://var/run/docker.sock
    ports: 
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./prometheus.yaml:/prometheus.yaml
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/prometheus.yaml
    ports:
      - 9090:9090
    environment:
      TZ: "Europe/Moscow"
    networks:
      - mynetwork
  
  grafana:
    image: grafana/grafana:10.2.2
    user: root
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    hostname: grafana
    environment:
      TZ: "Europe/Moscow"
    depends_on:
      prometheus:
        condition: service_started
    networks:
      - mynetwork

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.52
    restart: always
    environment:
      TZ: "Europe/Moscow"
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - mynetwork
  
networks:
  mynetwork:
    driver: bridge